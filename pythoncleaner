#!/usr/bin/env python3
import os
import argparse
import platform

# Stubbed disk space check (replace with your method)
def check_disk_space(path: str):
    """Stub: replace with your disk space check method."""
    print(f"[INFO] Checking disk space for {path}... (stubbed)")
    # Example: shutil.disk_usage(path).free


def find_large_files(target_dir: str, size_threshold_mb: int = 500):
    """Find files over the size_threshold_mb in the target_dir."""
    large_files = []
    size_threshold_bytes = size_threshold_mb * 1024 * 1024

    for root, dirs, files in os.walk(target_dir):
        for name in files:
            try:
                filepath = os.path.join(root, name)
                size = os.path.getsize(filepath)
                if size >= size_threshold_bytes:
                    large_files.append(filepath)
            except (FileNotFoundError, PermissionError):
                continue
    return large_files


def load_approved_list(approved_file: str):
    """Load the list of pre-approved files for deletion."""
    if not os.path.exists(approved_file):
        print(f"[WARN] Approved list file '{approved_file}' not found.")
        return set()
    with open(approved_file, "r") as f:
        return {line.strip() for line in f if line.strip()}


def filter_deletable_files(found_files, approved_files):
    """Return only files that are both large and approved for deletion."""
    return [f for f in found_files if os.path.basename(f) in approved_files]


def main():
    parser = argparse.ArgumentParser(description="Disk cleanup script")
    parser.add_argument("target_dir", help="Target directory to scan")
    parser.add_argument("approved_list", help="File containing approved filenames to delete")
    parser.add_argument("--delete", action="store_true", help="Actually delete files instead of dry run")
    args = parser.parse_args()

    system_type = platform.system()
    print(f"[INFO] Running on {system_type} system")

    # Step 1: Disk space check (stubbed)
    check_disk_space(args.target_dir)

    # Step 2: Find large files
    large_files = find_large_files(args.target_dir)
    print(f"[INFO] Found {len(large_files)} files >= 500MB")

    # Step 3: Load approved list
    approved_files = load_approved_list(args.approved_list)

    # Step 4: Match against approved list
    deletable_files = filter_deletable_files(large_files, approved_files)

    if not deletable_files:
        print("[INFO] No files eligible for deletion.")
        return

    print("\n[INFO] Files eligible for deletion:")
    for f in deletable_files:
        print(f"  {f}")

    if args.delete:
        print("\n[INFO] Deleting files...")
        for f in deletable_files:
            try:
                os.remove(f)
                print(f"[DELETED] {f}")
            except Exception as e:
                print(f"[ERROR] Could not delete {f}: {e}")
    else:
        print("\n[INFO] Dry run mode: No files deleted.")


if __name__ == "__main__":
    main()